{"version":3,"sources":["./src/app/services/core/core.service.ts","./src/app/services/signup/signup.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACqB;;;AAMzD,MAAM,WAAW;IAEtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;IAFgB,CAAC;IAI/C,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC;IACrD,CAAC;IAED,kBAAkB,CAAC,MAAM;QACvB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,sBAAsB,GAAG,MAAM,CAAC,CAAC;IAC7E,CAAC;IAED,iBAAiB,CAAC,UAAU;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,qBAAqB,EAAE,UAAU,CAAC,CAAC;IAChF,CAAC;IAED,cAAc,CAAC,GAAG;QAChB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,6BAA6B,EAAE,GAAG,CAAC,CAAC;IACjF,CAAC;IAED,wBAAwB,CAAC,MAAM;QAC7B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,wBAAwB,GAAG,MAAM,EAAE,MAAM,CAAC;IACtF,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,gCAAgC,CAAC,CAAC;IAC9E,CAAC;IAED,UAAU,CAAC,MAAM;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,OAAO,UAAU,MAAM,EAAE,CAAC,CAAC;IACnE,CAAC;IAED,+BAA+B;IAC/B,aAAa,CAAC,MAAM;QAClB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,6BAA6B,MAAM,EAAE,CAAC,CAAC;IACnF,CAAC;;sEArCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAA;AAAA;AAAA;AAA2C;AACqB;;;AAMzD,MAAM,aAAa;IAExB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAE1C,YAAO,GAAG,qEAAW,CAAC,OAAO,CAAC;IAFgB,CAAC;IAI/C,MAAM,CAAC,SAAS;QACd,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,SAAS,CAAC,CAAC;IACzE,CAAC;IAED,cAAc,CAAC,SAAS;QACtB,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,yBAAyB,GAAG,SAAS,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACrG,CAAC;;0EAZU,aAAa;gGAAb,aAAa,WAAb,aAAa,mBAFZ,MAAM;6FAEP,aAAa;cAHzB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CoreService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  baseURL = environment.baseURL;\n\n  getAllUsers() {\n    return this.httpClient.get(this.baseURL + '/user');\n  }\n\n  getUserProfileById(userId) {\n    return this.httpClient.get(this.baseURL + '/user/getuserDetail/' + userId);\n  }\n\n  updateUserProfile(updateData) {\n    return this.httpClient.post(this.baseURL + '/user/updateprofile', updateData);\n  }\n\n  changePassword(obj) {\n    return this.httpClient.post(this.baseURL + '/password/resetold-password', obj);\n  }\n\n  changeActiveStatusOfUser(userId) {\n    return this.httpClient.put(this.baseURL + '/admin/activeInactive/' + userId, userId)\n  }\n\n  getActiveCount() {\n    return this.httpClient.get(this.baseURL + '/admin/countActiveInaciveusers');\n  }\n\n  deleteUser(userID) {\n    return this.httpClient.delete(`${this.baseURL}/admin/${userID}`);\n  }\n\n  // get ticket form with form id\n  getTicketForm(formId) {\n    return this.httpClient.get(`${this.baseURL}/tripticket/getTicketform/${formId}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from \"../../../environments/environment\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignupService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  baseURL = environment.baseURL;\n\n  signup(signupObj) {\n    return this.httpClient.post(this.baseURL + '/login/create', signupObj);\n  }\n\n  forgotPassword(forgotObj) {\n    return this.httpClient.post(this.baseURL + '/password/forgot?email=' + forgotObj.email, forgotObj);\n  }\n}\n"],"sourceRoot":"webpack:///"}